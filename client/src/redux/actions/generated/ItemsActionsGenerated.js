/**
 *
 *
  _____                      _              _ _ _     _   _     _        __ _ _
 |  __ \                    | |            | (_) |   | | | |   (_)      / _(_) |
 | |  | | ___    _ __   ___ | |_    ___  __| |_| |_  | |_| |__  _ ___  | |_ _| | ___
 | |  | |/ _ \  | '_ \ / _ \| __|  / _ \/ _` | | __| | __| '_ \| / __| |  _| | |/ _ \
 | |__| | (_) | | | | | (_) | |_  |  __/ (_| | | |_  | |_| | | | \__ \ | | | | |  __/
 |_____/ \___/  |_| |_|\___/ \__|  \___|\__,_|_|\__|  \__|_| |_|_|___/ |_| |_|_|\___|

 * DO NOT EDIT THIS FILE!!
 *
 *  TO CUSTOMIZE FUNCTIONS IN ItemsActionsGenerated.js PLEASE EDIT ../ItemsActions.js
 *
 *  -- THIS FILE WILL BE OVERWRITTEN ON THE NEXT SKAFFOLDER'S CODE GENERATION --
 *
 */

import * as types from "../../actionTypes";
import ItemsApi from "../../../api/ItemsApi";

let actionsFunction = {

  //CRUD METHODS

  // Create items
  createItems: function(items) {
    return function(dispatch) {
      return ItemsApi
        .createItems(items)
        .then(items => {
          dispatch(actionsFunction.createItemsSuccess(items));
        })
        .catch(error => {
          throw error;
        });
    };
  },

  createItemsSuccess: function(items) {
    return { type: types.CREATE_ITEMS_SUCCESS, payload: items };
  },


  // Delete items
  deleteItems: function(id) {
    return function(dispatch) {
      return ItemsApi
        .deleteItems(id)
        .then(items => {
          dispatch(actionsFunction.deleteItemsSuccess(items));
        })
        .catch(error => {
          throw error;
        });
    };
  },

  deleteItemsSuccess: function(items) {
    return { type: types.DELETE_ITEMS_SUCCESS, payload: items };
  },


  // Get items
  loadItems: function(id) {
    return function(dispatch) {
      return ItemsApi
        .getOneItems(id)
        .then(items => {
          dispatch(actionsFunction.loadItemsSuccess(items));
        })
        .catch(error => {
          throw error;
        });
    };
  },

  loadItemsSuccess: function(items) {
    return { type: types.GET_ITEMS_SUCCESS, payload: items };
  },

  // Load  list
  loadItemsList: function() {
    return function(dispatch) {
      return ItemsApi
        .getItemsList()
        .then(list => {
          dispatch(actionsFunction.loadItemsListSuccess(list));
        })
        .catch(error => {
          throw error;
        });
    };
  },

  loadItemsListSuccess: function(list) {
    return { type: types.LIST_ITEMS_SUCCESS, payload: list };
  },

	
  // Save items
  saveItems: function(items) {
    return function(dispatch) {
      return ItemsApi
        .saveItems(items)
        .then(items => {
          dispatch(actionsFunction.saveItemsSuccess(items));
        })
        .catch(error => {
          throw error;
        });
    };
  },

  saveItemsSuccess: function(items) {
    return { type: types.UPDATE_ITEMS_SUCCESS, payload: items };
  },


};

export default actionsFunction;
