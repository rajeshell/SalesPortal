/**
 *
 *
  _____                      _              _ _ _     _   _     _        __ _ _
 |  __ \                    | |            | (_) |   | | | |   (_)      / _(_) |
 | |  | | ___    _ __   ___ | |_    ___  __| |_| |_  | |_| |__  _ ___  | |_ _| | ___
 | |  | |/ _ \  | '_ \ / _ \| __|  / _ \/ _` | | __| | __| '_ \| / __| |  _| | |/ _ \
 | |__| | (_) | | | | | (_) | |_  |  __/ (_| | | |_  | |_| | | | \__ \ | | | | |  __/
 |_____/ \___/  |_| |_|\___/ \__|  \___|\__,_|_|\__|  \__|_| |_|_|___/ |_| |_|_|\___|

 * DO NOT EDIT THIS FILE!!
 *
 *  TO CUSTOMIZE FUNCTIONS IN OrderDetailsActionsGenerated.js PLEASE EDIT ../OrderDetailsActions.js
 *
 *  -- THIS FILE WILL BE OVERWRITTEN ON THE NEXT SKAFFOLDER'S CODE GENERATION --
 *
 */

import * as types from "../../actionTypes";
import OrderDetailsApi from "../../../api/OrderDetailsApi";

let actionsFunction = {

  //CRUD METHODS

  // Create orderdetails
  createOrderDetails: function(orderdetails) {
    return function(dispatch) {
      return OrderDetailsApi
        .createOrderDetails(orderdetails)
        .then(orderdetails => {
          dispatch(actionsFunction.createOrderDetailsSuccess(orderdetails));
        })
        .catch(error => {
          throw error;
        });
    };
  },

  createOrderDetailsSuccess: function(orderdetails) {
    return { type: types.CREATE_ORDERDETAILS_SUCCESS, payload: orderdetails };
  },


  // Delete orderdetails
  deleteOrderDetails: function(id) {
    return function(dispatch) {
      return OrderDetailsApi
        .deleteOrderDetails(id)
        .then(orderdetails => {
          dispatch(actionsFunction.deleteOrderDetailsSuccess(orderdetails));
        })
        .catch(error => {
          throw error;
        });
    };
  },

  deleteOrderDetailsSuccess: function(orderdetails) {
    return { type: types.DELETE_ORDERDETAILS_SUCCESS, payload: orderdetails };
  },


  // Get orderdetails
  loadOrderDetails: function(id) {
    return function(dispatch) {
      return OrderDetailsApi
        .getOneOrderDetails(id)
        .then(orderdetails => {
          dispatch(actionsFunction.loadOrderDetailsSuccess(orderdetails));
        })
        .catch(error => {
          throw error;
        });
    };
  },

  loadOrderDetailsSuccess: function(orderdetails) {
    return { type: types.GET_ORDERDETAILS_SUCCESS, payload: orderdetails };
  },

  // Load  list
  loadOrderDetailsList: function() {
    return function(dispatch) {
      return OrderDetailsApi
        .getOrderDetailsList()
        .then(list => {
          dispatch(actionsFunction.loadOrderDetailsListSuccess(list));
        })
        .catch(error => {
          throw error;
        });
    };
  },

  loadOrderDetailsListSuccess: function(list) {
    return { type: types.LIST_ORDERDETAILS_SUCCESS, payload: list };
  },

	
  // Save orderdetails
  saveOrderDetails: function(orderdetails) {
    return function(dispatch) {
      return OrderDetailsApi
        .saveOrderDetails(orderdetails)
        .then(orderdetails => {
          dispatch(actionsFunction.saveOrderDetailsSuccess(orderdetails));
        })
        .catch(error => {
          throw error;
        });
    };
  },

  saveOrderDetailsSuccess: function(orderdetails) {
    return { type: types.UPDATE_ORDERDETAILS_SUCCESS, payload: orderdetails };
  },


};

export default actionsFunction;
